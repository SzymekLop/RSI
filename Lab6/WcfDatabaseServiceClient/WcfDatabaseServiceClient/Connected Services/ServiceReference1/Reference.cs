//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfDatabaseServiceClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDatabaseService")]
    public interface IDatabaseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/getAllUsers", ReplyAction="http://tempuri.org/IDatabaseService/getAllUsersResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WcfDatabaseServiceClient.ServiceReference1.User))]
        object[] getAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/getAllUsers", ReplyAction="http://tempuri.org/IDatabaseService/getAllUsersResponse")]
        System.Threading.Tasks.Task<object[]> getAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/getAllUsersSleep", ReplyAction="http://tempuri.org/IDatabaseService/getAllUsersSleepResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WcfDatabaseServiceClient.ServiceReference1.User))]
        object[] getAllUsersSleep();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/getAllUsersSleep", ReplyAction="http://tempuri.org/IDatabaseService/getAllUsersSleepResponse")]
        System.Threading.Tasks.Task<object[]> getAllUsersSleepAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/getUserDatabaseSize", ReplyAction="http://tempuri.org/IDatabaseService/getUserDatabaseSizeResponse")]
        int getUserDatabaseSize();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/getUserDatabaseSize", ReplyAction="http://tempuri.org/IDatabaseService/getUserDatabaseSizeResponse")]
        System.Threading.Tasks.Task<int> getUserDatabaseSizeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/addUser", ReplyAction="http://tempuri.org/IDatabaseService/addUserResponse")]
        WcfDatabaseServiceClient.ServiceReference1.User addUser(WcfDatabaseServiceClient.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/addUser", ReplyAction="http://tempuri.org/IDatabaseService/addUserResponse")]
        System.Threading.Tasks.Task<WcfDatabaseServiceClient.ServiceReference1.User> addUserAsync(WcfDatabaseServiceClient.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/updateUser", ReplyAction="http://tempuri.org/IDatabaseService/updateUserResponse")]
        WcfDatabaseServiceClient.ServiceReference1.User updateUser(WcfDatabaseServiceClient.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/updateUser", ReplyAction="http://tempuri.org/IDatabaseService/updateUserResponse")]
        System.Threading.Tasks.Task<WcfDatabaseServiceClient.ServiceReference1.User> updateUserAsync(WcfDatabaseServiceClient.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/deleteUser", ReplyAction="http://tempuri.org/IDatabaseService/deleteUserResponse")]
        WcfDatabaseServiceClient.ServiceReference1.User deleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/deleteUser", ReplyAction="http://tempuri.org/IDatabaseService/deleteUserResponse")]
        System.Threading.Tasks.Task<WcfDatabaseServiceClient.ServiceReference1.User> deleteUserAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatabaseServiceChannel : WcfDatabaseServiceClient.ServiceReference1.IDatabaseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseServiceClient : System.ServiceModel.ClientBase<WcfDatabaseServiceClient.ServiceReference1.IDatabaseService>, WcfDatabaseServiceClient.ServiceReference1.IDatabaseService {
        
        public DatabaseServiceClient() {
        }
        
        public DatabaseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public object[] getAllUsers() {
            return base.Channel.getAllUsers();
        }
        
        public System.Threading.Tasks.Task<object[]> getAllUsersAsync() {
            return base.Channel.getAllUsersAsync();
        }
        
        public object[] getAllUsersSleep() {
            return base.Channel.getAllUsersSleep();
        }
        
        public System.Threading.Tasks.Task<object[]> getAllUsersSleepAsync() {
            return base.Channel.getAllUsersSleepAsync();
        }
        
        public int getUserDatabaseSize() {
            return base.Channel.getUserDatabaseSize();
        }
        
        public System.Threading.Tasks.Task<int> getUserDatabaseSizeAsync() {
            return base.Channel.getUserDatabaseSizeAsync();
        }
        
        public WcfDatabaseServiceClient.ServiceReference1.User addUser(WcfDatabaseServiceClient.ServiceReference1.User user) {
            return base.Channel.addUser(user);
        }
        
        public System.Threading.Tasks.Task<WcfDatabaseServiceClient.ServiceReference1.User> addUserAsync(WcfDatabaseServiceClient.ServiceReference1.User user) {
            return base.Channel.addUserAsync(user);
        }
        
        public WcfDatabaseServiceClient.ServiceReference1.User updateUser(WcfDatabaseServiceClient.ServiceReference1.User user) {
            return base.Channel.updateUser(user);
        }
        
        public System.Threading.Tasks.Task<WcfDatabaseServiceClient.ServiceReference1.User> updateUserAsync(WcfDatabaseServiceClient.ServiceReference1.User user) {
            return base.Channel.updateUserAsync(user);
        }
        
        public WcfDatabaseServiceClient.ServiceReference1.User deleteUser(int id) {
            return base.Channel.deleteUser(id);
        }
        
        public System.Threading.Tasks.Task<WcfDatabaseServiceClient.ServiceReference1.User> deleteUserAsync(int id) {
            return base.Channel.deleteUserAsync(id);
        }
    }
}
